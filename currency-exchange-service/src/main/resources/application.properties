spring.application.name=currency-exchange
server.port=8000


spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.jpa.defer-datasource-initialization=true
spring.h2.console.enabled=true



#no esta en el codigo
#spring.jpa.defer-datasource-initialization=true
spring.config.import=optional:configserver:http://localhost:8888

logging.level.org.springframework = INFO




#-------------------EUREKA--------------------------------------------------------------
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#Elimina error Eureka conecction refused
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false
#---------------------------------------------------------------------------------------


#-----------------------------RESILIENCE------------------------------------------------------------

#Lo siguiente es para temas de resilencia por si un servicio se cae por un instante, vuelva a esperar y despues realice otro intento
#las veces que revisara si la api esta caida
resilience4j.retry.instances.sample-apiX.maxAttempts=5
#en cada intento espera un segundo
resilience4j.retry.instances.sample-apiX.waitDuration=1s
#exponential increse time wait to retrieve another request.- Is useful in the cloud like amazon
resilience4j.retry.instances.sample-apiX.enableExponentialBackoff=true 


#@RateLimiter
#En 10 segundos quiero permitir solo 10,000 llamadas a esta API
resilience4j.ratelimiter.instances.defaultY.limitForPeriod=2
resilience4j.ratelimiter.instances.defaultY.limitRefreshPeriod=10s

#@Bulkhead
#Solo tienes permitido 10 llamadas concurrentes (mismo tiempo) 
resilience4j.bulkhead.instances.defaultZ.maxConcurrentCalls=10

#------------------------------------------------------------------------------------------




#-------------------distributed tracing server-------------------------------------

#1.0 signifa que quieres testar todos los request 100%. El 5% seria 0.05 
management.tracing.sampling.probability=1.0 
#Asocia el nombre de la aplicacion
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] 



## CHANGE-KUBERNETES
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
